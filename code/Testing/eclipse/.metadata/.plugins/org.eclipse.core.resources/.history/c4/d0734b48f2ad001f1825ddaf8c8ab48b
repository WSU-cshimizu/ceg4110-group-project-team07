package StepDefinations;

import io.cucumber.java.en.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.ExpectedConditions;

import java.time.Duration;

public class viewimage {

    WebDriver driver;
    WebDriverWait wait;

    @Given("I am on the Index page")
    public void iAmOnTheIndexPage() {
    	System.setProperty("webdriver.gecko.driver", "/Users/prabeshbhattarai/Downloads/eclipse/CucumberJava/src/test/resources/drivers/geckodriver");
        driver = new FirefoxDriver();
        driver.get("https://geosyncra.netlify.app/"); 
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    }

    @When("I click on the {string} link")
    public void iClickOnTheLink(String linkText) {
        WebElement viewPageLink = wait.until(ExpectedConditions.elementToBeClickable(By.linkText(linkText)));
        viewPageLink.click();
    }

    @Then("I should be redirected to the Viewpage")
    public void iShouldBeRedirectedToTheViewpage() {
        wait.until(ExpectedConditions.titleIs("Viewpage"));
        System.out.println("Redirected to Viewpage successfully.");
    }

    @When("I click on the {string} button")
    public void iClickOnTheButton(String buttonId) {
        WebElement viewImageButton = wait.until(ExpectedConditions.elementToBeClickable(By.id(buttonId)));
        viewImageButton.click();
    }

    @Then("the image should be displayed in the image container")
    public void theImageShouldBeDisplayedInTheImageContainer() {
        WebElement imageContainer = wait.until(ExpectedConditions.presenceOfElementLocated(By.id("imageContainer")));
        String containerHtml = imageContainer.getAttribute("innerHTML");

        if (containerHtml.contains("<img")) {
            System.out.println("Test Passed: Image is displayed in the image container.");
        } else {
            throw new AssertionError("Test Failed: No image is displayed in the image container.");
        }
    }

    @When("I close the gallery")
    public void iCloseTheGallery() {
        WebElement imageContainer = wait.until(ExpectedConditions.presenceOfElementLocated(By.id("imageContainer")));
        imageContainer.clear(); // Simulates closing the gallery by clearing the container
    }

    @Then("the image container should be empty")
    public void theImageContainerShouldBeEmpty() {
        WebElement imageContainer = wait.until(ExpectedConditions.presenceOfElementLocated(By.id("imageContainer")));
        String containerHtml = imageContainer.getAttribute("innerHTML");

        if (containerHtml.isEmpty()) {
            System.out.println("Test Passed: Image container is empty.");
        } else {
            throw new AssertionError("Test Failed: Image container is not empty.");
        }

        // Close the browser
        driver.quit();
    }
}
